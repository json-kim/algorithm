# 백준 2565번 문제
# 전깃줄 (동적 계획법)

# 연결된 전깃줄중 일부를 제거하여 교차된 줄이 없도록 해야한다.
# 최소한의 전깃줄만을 제거할 때 제거할 전깃줄의 최소값을 구한다.
# 최장 증가 수열을 활용한다.
# 그러기 위해서는 A전봇대든 B전봇대든 기준으로 삼을 전봇대에서 정렬을 해주어야 한다.
# (기준전봇대의 위치를 한칸씩 늘려가며 반대편전봇대에 연결된 위치값을 가지고 이전의 전깃줄과 교차하는지를 체크하기 위해,
# 기준전봇대가 정렬되면 해당 전봇대의 위치는 고려하지 않아도 됨 = B전봇대의 위치만 가지고 교차하는지 체크 가능)
# 위치를 1씩 늘려가며 n번째 위치에서 B전봇대에 연결된 위치의 값이 
# 1~n-1위치의 전깃줄을 확인하며 해당 전깃줄의 B전봇대에 연결된 위치의 최댓값보다 큰지를 확인한다.(크다면 교차하지 않고 연결 가능)
n = int(input())

lines = []
for _ in range(n):
    lines.append(list(map(int, input().split())))

lines.sort(key= lambda x:x[0])

count = [1] * n

for i in range(n):
    for j in range(i):
        if lines[i][1] > lines[j][1] and count[i] <= count[j]:
            count[i] = count[j] + 1

print(n-max(count))