# 백준 1904번 문제
# 01타일 (동적 계획법)

# 00과 1로 만들수 있는 이진수의 최대 가짓수를 계산
# 00을 하나의 숫자로 보기, 00의 개수에 따라 경우의 수를 계산
# n번째 경우는 n-1번째의 경우에서 1이 추가되고, n-2번째 경우에서 00이 추가되는 경우의 수의 합이다.
# 이 때 왼쪽 오른쪽 어디에 추가하든 상관 없이 모든 경우의 수를 포함하기 때문에 
# n번째 경우의수는 (n-1) + (n-2)가 된다.
n = int(input())

count = [0] * (n+2)
count[1] = 1
count[2] = 2

for i in range(3, n+1):
    count[i] = (count[i-1] + count[i-2])%15746

print(count[n])

# 1일때 1
# 1
# 2일때 2
# 11 00
# 3일때 3
# 100 001 111
# 4일때 5
# 0011 1001 1100 1111 0000
# 5일때 8
# 00111 10011 11001 11100 10000 00100 00001 11111
# 6일때 13
# 001111 100111 110011 111001 111100 000011 001001 100001 001100 100100 110000 000000 111111
